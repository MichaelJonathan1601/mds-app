{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = VerifySMS;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _styles = require(\"./styles\");\n\nvar _Entypo = _interopRequireDefault(require(\"react-native-vector-icons/dist/Entypo\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mich0\\\\Downloads\\\\Mds.App.V2-master\\\\Mds.App.V2-master\\\\src\\\\screens\\\\LoginScreens\\\\VerifySMS\\\\index.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction VerifySMS() {\n  var navigation = (0, _native.useNavigation)();\n\n  var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      sms = _useState2[0],\n      setSMS = _useState2[1];\n\n  var input1 = (0, _react.useRef)('');\n  var input2 = (0, _react.useRef)('');\n  var input3 = (0, _react.useRef)('');\n  var input4 = (0, _react.useRef)('');\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      input1value = _useState4[0],\n      setInput1value = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(''),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      input2value = _useState6[0],\n      setInput2value = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(''),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      input3value = _useState8[0],\n      setInput3value = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(''),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      input4value = _useState10[0],\n      setInput4value = _useState10[1];\n\n  (0, _react.useEffect)(function () {\n    try {\n      if (input1.current.isFocused() && input1value !== '') {\n        input2.current.focus();\n      }\n\n      if (input2.current.isFocused() && input2value !== '') {\n        input3.current.focus();\n      }\n\n      if (input3.current.isFocused() && input3value !== '') {\n        input4.current.focus();\n      }\n\n      if (input4.current.isFocused() && input4value !== '') {\n        setSMS(1);\n      }\n    } catch (e) {}\n  }), [];\n  return _react.default.createElement(_react.default.Fragment, null, sms == 0 && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_styles.GradientBody, {\n    colors: ['#041b4e', '#093575', '#0e4b97'],\n    useAngle: true,\n    angle: 100,\n    angleCenter: {\n      x: 0.5,\n      y: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_styles.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.pop();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_Entypo.default, {\n    name: \"chevron-thin-left\",\n    size: 30,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_styles.HeaderText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Verific\\xE7\\xE3o\"), _react.default.createElement(_styles.HeaderDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Digite o c\\xF3digo que enviamos por SMS\"))), _react.default.createElement(_styles.InputView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_styles.NumberInput, {\n    placeholder: \"0\",\n    placeholderTextColor: \"white\",\n    maxLength: 1,\n    ref: input1,\n    autoFocus: true,\n    onChangeText: setInput1value,\n    keyboardType: \"numeric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(_styles.NumberInput, {\n    placeholder: \"0\",\n    placeholderTextColor: \"white\",\n    maxLength: 1,\n    ref: input2,\n    onChangeText: setInput2value,\n    keyboardType: \"numeric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(_styles.NumberInput, {\n    placeholder: \"0\",\n    placeholderTextColor: \"white\",\n    maxLength: 1,\n    ref: input3,\n    onChangeText: setInput3value,\n    keyboardType: \"numeric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(_styles.NumberInput, {\n    placeholder: \"0\",\n    placeholderTextColor: \"white\",\n    maxLength: 1,\n    ref: input4,\n    onChangeText: setInput4value,\n    keyboardType: \"numeric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })))), sms == 1 && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_styles.GradientBody, {\n    colors: ['#041b4e', '#093575', '#0e4b97'],\n    useAngle: true,\n    angle: 100,\n    angleCenter: {\n      x: 0.5,\n      y: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_styles.RegisterConfirmed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_styles.TextView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_styles.ImageConfirmed, {\n    source: require('../../../assets/img/confirmed.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_styles.HeaderText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Cadastro confirmado!\"), _react.default.createElement(_styles.HeaderDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Bem vindo a MDS\")), _react.default.createElement(_styles.ButtonView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_styles.ConfirmButton, {\n    onPress: function onPress() {\n      return navigation.navigate('Tutorial');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_styles.ButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, \"Concluir Cadastro\")))))));\n}","map":{"version":3,"sources":["C:/Users/mich0/Downloads/Mds.App.V2-master/Mds.App.V2-master/src/screens/LoginScreens/VerifySMS/index.js"],"names":["VerifySMS","navigation","sms","setSMS","input1","input2","input3","input4","input1value","setInput1value","input2value","setInput2value","input3value","setInput3value","input4value","setInput4value","current","isFocused","focus","e","x","y","pop","require","navigate"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\r\n\r\nimport {View, Text, TextInput, StyleSheet} from 'react-native';\r\nimport {TouchableOpacity} from 'react-native-gesture-handler';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport {\r\n  ButtonView,\r\n  ConfirmButton,\r\n  ButtonText,\r\n  HeaderText,\r\n  HeaderDescription,\r\n  RegisterConfirmed,\r\n  GradientBody,\r\n  TextView,\r\n  Header,\r\n  NumberInput,\r\n  InputView,\r\n  ImageConfirmed,\r\n} from './styles';\r\n\r\nimport Icon from 'react-native-vector-icons/dist/Entypo';\r\n\r\nexport default function VerifySMS() {\r\n  const navigation = useNavigation();\r\n\r\n  const [sms, setSMS] = useState(0);\r\n\r\n  const input1 = useRef('');\r\n  const input2 = useRef('');\r\n  const input3 = useRef('');\r\n  const input4 = useRef('');\r\n\r\n  const [input1value, setInput1value] = useState('');\r\n  const [input2value, setInput2value] = useState('');\r\n  const [input3value, setInput3value] = useState('');\r\n  const [input4value, setInput4value] = useState('');\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (input1.current.isFocused() && input1value !== '') {\r\n        input2.current.focus();\r\n      }\r\n      if (input2.current.isFocused() && input2value !== '') {\r\n        input3.current.focus();\r\n      }\r\n      if (input3.current.isFocused() && input3value !== '') {\r\n        input4.current.focus();\r\n      }\r\n      if (input4.current.isFocused() && input4value !== '') {\r\n        setSMS(1);\r\n      }\r\n    } catch (e) {}\r\n  }),\r\n    [];\r\n\r\n  return (\r\n    <>\r\n      {sms == 0 && (\r\n        <>\r\n          <GradientBody\r\n            colors={['#041b4e', '#093575', '#0e4b97']}\r\n            useAngle={true}\r\n            angle={100}\r\n            angleCenter={{x: 0.5, y: 0.5}}>\r\n            <Header>\r\n              <TouchableOpacity onPress={() => navigation.pop()}>\r\n                <Icon name=\"chevron-thin-left\" size={30} color=\"white\" />\r\n              </TouchableOpacity>\r\n              <View>\r\n                <HeaderText>Verificção</HeaderText>\r\n                <HeaderDescription>\r\n                  Digite o código que enviamos por SMS\r\n                </HeaderDescription>\r\n              </View>\r\n            </Header>\r\n            <InputView>\r\n              <NumberInput\r\n                placeholder=\"0\"\r\n                placeholderTextColor=\"white\"\r\n                maxLength={1}\r\n                ref={input1}\r\n                autoFocus\r\n                onChangeText={setInput1value}\r\n                keyboardType=\"numeric\"\r\n              />\r\n              <NumberInput\r\n                placeholder=\"0\"\r\n                placeholderTextColor=\"white\"\r\n                maxLength={1}\r\n                ref={input2}\r\n                onChangeText={setInput2value}\r\n                keyboardType=\"numeric\"\r\n              />\r\n              <NumberInput\r\n                placeholder=\"0\"\r\n                placeholderTextColor=\"white\"\r\n                maxLength={1}\r\n                ref={input3}\r\n                onChangeText={setInput3value}\r\n                keyboardType=\"numeric\"\r\n              />\r\n              <NumberInput\r\n                placeholder=\"0\"\r\n                placeholderTextColor=\"white\"\r\n                maxLength={1}\r\n                ref={input4}\r\n                onChangeText={setInput4value}\r\n                keyboardType=\"numeric\"\r\n              />\r\n            </InputView>\r\n          </GradientBody>\r\n        </>\r\n      )}\r\n\r\n      {sms == 1 && (\r\n        <>\r\n          <GradientBody\r\n            colors={['#041b4e', '#093575', '#0e4b97']}\r\n            useAngle={true}\r\n            angle={100}\r\n            angleCenter={{x: 0.5, y: 0.5}}>\r\n            <RegisterConfirmed>\r\n              <TextView>\r\n                <ImageConfirmed\r\n                  source={require('../../../assets/img/confirmed.png')}\r\n                />\r\n                <HeaderText>Cadastro confirmado!</HeaderText>\r\n                <HeaderDescription>Bem vindo a MDS</HeaderDescription>\r\n              </TextView>\r\n              <ButtonView>\r\n                <ConfirmButton onPress={() => navigation.navigate('Tutorial')}>\r\n                  <ButtonText>Concluir Cadastro</ButtonText>\r\n                </ConfirmButton>\r\n              </ButtonView>\r\n            </RegisterConfirmed>\r\n          </GradientBody>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}