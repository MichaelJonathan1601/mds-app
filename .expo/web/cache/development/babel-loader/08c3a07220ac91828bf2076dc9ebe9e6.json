{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Register;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _register = require(\"../../../services/register\");\n\nvar _indication = require(\"../../../services/indication\");\n\nvar _Entypo = _interopRequireDefault(require(\"react-native-vector-icons/dist/Entypo\"));\n\nvar _MaterialIcons = _interopRequireDefault(require(\"react-native-vector-icons/dist/MaterialIcons\"));\n\nvar _SnackBar = _interopRequireDefault(require(\"../../../shared/components/SnackBar\"));\n\nvar _styles = require(\"./styles\");\n\nvar _masks = require(\"../../../shared/utils/masks\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\mich0\\\\Downloads\\\\Mds.App.V2-master\\\\Mds.App.V2-master\\\\src\\\\screens\\\\LoginScreens\\\\Register\\\\index.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar timer;\n\nfunction Register() {\n  var navigation = (0, _native.useNavigation)();\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n    return (0, _extends2.default)({}, state.login);\n  }),\n      token = _useSelector.token;\n\n  var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      register = _useState2[0],\n      setRegister = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(''),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      cpf = _useState6[0],\n      setCPF = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(''),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      birth = _useState8[0],\n      setBirth = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(''),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      company = _useState10[0],\n      setCompany = _useState10[1];\n\n  var _useState11 = (0, _react.useState)(''),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      coupon = _useState12[0],\n      setCoupon = _useState12[1];\n\n  var _useState13 = (0, _react.useState)(''),\n      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n      email = _useState14[0],\n      setEmail = _useState14[1];\n\n  var _useState15 = (0, _react.useState)(''),\n      _useState16 = (0, _slicedToArray2.default)(_useState15, 2),\n      phone = _useState16[0],\n      setPhone = _useState16[1];\n\n  var _useState17 = (0, _react.useState)(''),\n      _useState18 = (0, _slicedToArray2.default)(_useState17, 2),\n      password = _useState18[0],\n      setPassword = _useState18[1];\n\n  var _useState19 = (0, _react.useState)(''),\n      _useState20 = (0, _slicedToArray2.default)(_useState19, 2),\n      password2 = _useState20[0],\n      setPassword2 = _useState20[1];\n\n  var _useState21 = (0, _react.useState)(false),\n      _useState22 = (0, _slicedToArray2.default)(_useState21, 2),\n      terms = _useState22[0],\n      setTerms = _useState22[1];\n\n  var _useState23 = (0, _react.useState)(false),\n      _useState24 = (0, _slicedToArray2.default)(_useState23, 2),\n      displayed = _useState24[0],\n      setDisplayed = _useState24[1];\n\n  var _useState25 = (0, _react.useState)('Não foi possível fazer login'),\n      _useState26 = (0, _slicedToArray2.default)(_useState25, 2),\n      snackText = _useState26[0],\n      setSnackText = _useState26[1];\n\n  var _useState27 = (0, _react.useState)(false),\n      _useState28 = (0, _slicedToArray2.default)(_useState27, 2),\n      colorChange = _useState28[0],\n      setColorChange = _useState28[1];\n\n  var grey = '#7c7b7b';\n  var red = '#ce4257';\n\n  var closeModal = function closeModal() {\n    setDisplayed(false);\n    clearTimeout(timer);\n  };\n\n  var Display = function Display() {\n    setColorChange(true);\n    setDisplayed(true);\n    timer = setTimeout(function () {\n      return setDisplayed(false);\n    }, 3000);\n  };\n\n  function checkFields(x) {\n    if (x == 1) {\n      if (name !== '' && cpf !== '' && birth !== '') {\n        if (cpf.length == 14 && birth.length == 10) {\n          setRegister(1);\n          setColorChange(false);\n        } else {\n          setSnackText('Preencha os campos corretamente');\n          Display();\n        }\n      } else {\n        setSnackText('Preencha todos os campos');\n        Display();\n      }\n    }\n\n    if (x == 2) {\n      if (password == password2 && terms !== false && phone.length == 15 && email.search('@') !== -1 && password.length >= 6 && password2.length >= 6) {\n        dispatch({\n          type: 'USER_TUTORIAL_LOGIN',\n          payload: {\n            cpf: cpf,\n            password: password\n          }\n        });\n        (0, _register.postRegister)(name, cpf, birth, email, phone, password, terms);\n\n        if (coupon !== '') {\n          (0, _indication.getIndicationAccount)(coupon, token);\n        }\n\n        navigation.navigate('Tutorial');\n      } else {\n        setSnackText('Verifique todos os campos');\n        Display();\n      }\n\n      if (terms == false) {\n        setSnackText('Concorde com os termos');\n        Display();\n      }\n\n      if (password !== password2) {\n        setSnackText('As senhas precisam ser iguais');\n        Display();\n      }\n\n      if (password.length < 6 || password2.length < 6) {\n        setSnackText('As senhas de pelo menos 6 caracteres');\n        Display();\n      }\n    }\n  }\n\n  return _react.default.createElement(_react.default.Fragment, null, register == 0 && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_SnackBar.default, {\n    showSnack: displayed,\n    toggle: closeModal,\n    text: snackText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_styles.HeaderGradient, {\n    colors: ['#041b4e', '#093575', '#0e4b97'],\n    useAngle: true,\n    angle: 100,\n    angleCenter: {\n      x: 0.5,\n      y: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_styles.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.pop();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_Entypo.default, {\n    name: \"chevron-thin-left\",\n    size: 30,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_styles.HeaderText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, \"Vamos come\\xE7ar\"), _react.default.createElement(_styles.HeaderDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"Informe seu dados pessoais\")))), _react.default.createElement(_styles.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_styles.TextInputStyle, {\n    style: (0, _masks.inputViewRed)(name, colorChange),\n    value: name,\n    placeholder: \"Seu nome\",\n    onChangeText: setName,\n    placeholderTextColor: colorChange && name == '' ? red : grey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(_styles.TextInputStyle, {\n    style: [(0, _masks.inputViewRed)(cpf, colorChange), {\n      borderBottomColor: (0, _masks.cpfStyle)(cpf, colorChange) ? red : 'black'\n    }],\n    value: cpf,\n    maxLength: 14,\n    keyboardType: 'numeric',\n    onChangeText: function onChangeText(cpf) {\n      return setCPF((0, _masks.cpfMask)(cpf));\n    },\n    placeholder: \"CPF\",\n    placeholderTextColor: colorChange && cpf == '' ? red : grey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(_styles.TextInputStyle, {\n    style: [(0, _masks.inputViewRed)(birth, colorChange), {\n      borderBottomColor: (0, _masks.dataStyle)(birth, colorChange) ? red : 'black'\n    }],\n    value: birth,\n    placeholder: \"Data de nascimento\",\n    maxLength: 10,\n    keyboardType: 'numeric',\n    onChangeText: function onChangeText(birth) {\n      return setBirth((0, _masks.birthMask)(birth, colorChange));\n    },\n    placeholderTextColor: colorChange && birth == '' ? red : grey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(_styles.TextInputStyle, {\n    value: company,\n    placeholder: \"Qual sua empresa? (opcional)\",\n    onChangeText: setCompany,\n    placeholderTextColor: \"#7c7b7b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(_styles.TextInputStyle, {\n    value: coupon,\n    placeholder: \"C\\xF3digo de indica\\xE7\\xE3o (opcional)\",\n    onChangeText: setCoupon,\n    placeholderTextColor: \"#7c7b7b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  })), _react.default.createElement(_styles.ButtonGradient, {\n    colors: ['#041b4e', '#093575', '#0e4b97'],\n    useAngle: true,\n    angle: 100,\n    angleCenter: {\n      x: 0.5,\n      y: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_styles.ConfirmButton, {\n    onPress: function onPress() {\n      checkFields(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_styles.ButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, \"Pr\\xF3ximo passo\"))))), register == 1 && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_SnackBar.default, {\n    showSnack: displayed,\n    toggle: closeModal,\n    text: snackText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_styles.HeaderGradient, {\n    colors: ['#041b4e', '#093575', '#0e4b97'],\n    useAngle: true,\n    angle: 100,\n    angleCenter: {\n      x: 0.5,\n      y: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_styles.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      return setRegister(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_Entypo.default, {\n    name: \"chevron-thin-left\",\n    size: 30,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_styles.HeaderText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, \"Sua conta\"), _react.default.createElement(_styles.HeaderDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, \"Crie seus dados de acesso\")))), _react.default.createElement(_styles.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.ScrollView, {\n    horizontal: false,\n    contentContainerStyle: {\n      justifyContent: 'space-evenly',\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_styles.TextInputStyle, {\n    style: [(0, _masks.inputViewRed)(email, colorChange), (0, _masks.mailStyle)(email, colorChange)],\n    value: email,\n    placeholder: \"E-mail\",\n    onChangeText: setEmail,\n    keyboardType: 'email-address',\n    placeholderTextColor: colorChange && email == '' ? red : grey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_styles.TextInputStyle, {\n    style: [(0, _masks.inputViewRed)(phone, colorChange), (0, _masks.phoneStyle)(phone, colorChange)],\n    value: phone,\n    placeholder: \"Celular\",\n    maxLength: 15,\n    onChangeText: function onChangeText(phone) {\n      return setPhone((0, _masks.celMask)(phone));\n    },\n    keyboardType: 'numeric',\n    placeholderTextColor: colorChange && phone == '' ? red : grey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_styles.TextInputStyle, {\n    style: (0, _masks.pswCompareStyle)(password, password2, colorChange),\n    value: password,\n    onChangeText: setPassword,\n    placeholder: \"Senha\",\n    placeholderTextColor: colorChange && password == '' ? red : grey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_styles.TextInputStyle, {\n    style: [(0, _masks.inputViewRed)(password2, colorChange), (0, _masks.pswCompareStyle)(password2, password, colorChange)],\n    value: password2,\n    onChangeText: setPassword2,\n    placeholder: \"Confirmar Senha\",\n    placeholderTextColor: colorChange && password2 == '' || colorChange && password !== password2 ? red : grey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_styles.TermsView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      return setTerms(!terms);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }, terms ? _react.default.createElement(_MaterialIcons.default, {\n    name: \"check-box\",\n    size: 30,\n    color: \"#00a8ff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }) : _react.default.createElement(_MaterialIcons.default, {\n    name: \"check-box-outline-blank\",\n    size: 30,\n    color: \"#00a8ff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  })), _react.default.createElement(_styles.TextStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, \"Li e concordo com os\", ' ', _react.default.createElement(_styles.TextStyle, {\n    policy: true,\n    onPress: function onPress() {\n      navigation.navigate('Termos');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 19\n    }\n  }, \"termos de uso e pol\\xEDticas de privacidade\")))), _react.default.createElement(_styles.ButtonGradient, {\n    colors: ['#041b4e', '#093575', '#0e4b97'],\n    useAngle: true,\n    angle: 100,\n    angleCenter: {\n      x: 0.5,\n      y: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_styles.ConfirmButton, {\n    onPress: function onPress() {\n      checkFields(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_styles.ButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }, \"Concluir cadastro\"))))));\n}","map":{"version":3,"sources":["C:/Users/mich0/Downloads/Mds.App.V2-master/Mds.App.V2-master/src/screens/LoginScreens/Register/index.js"],"names":["timer","Register","navigation","dispatch","state","login","token","register","setRegister","name","setName","cpf","setCPF","birth","setBirth","company","setCompany","coupon","setCoupon","email","setEmail","phone","setPhone","password","setPassword","password2","setPassword2","terms","setTerms","displayed","setDisplayed","snackText","setSnackText","colorChange","setColorChange","grey","red","closeModal","clearTimeout","Display","setTimeout","checkFields","x","length","search","type","payload","navigate","y","pop","borderBottomColor","justifyContent","flex"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport {View, TouchableOpacity, ScrollView} from 'react-native';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {useNavigation} from '@react-navigation/native';\r\n\r\nimport {postRegister} from '../../../services/register';\r\nimport {getIndicationAccount} from '../../../services/indication';\r\n\r\nimport Icon from 'react-native-vector-icons/dist/Entypo';\r\nimport CheckBox from 'react-native-vector-icons/dist/MaterialIcons';\r\nimport SnackBar from '../../../shared/components/SnackBar';\r\n\r\nimport {\r\n  Body,\r\n  TermsView,\r\n  ConfirmButton,\r\n  ButtonText,\r\n  HeaderText,\r\n  HeaderDescription,\r\n  Header,\r\n  HeaderGradient,\r\n  ButtonGradient,\r\n  TextStyle,\r\n  TextInputStyle,\r\n} from './styles';\r\n\r\nimport {\r\n  cpfMask,\r\n  birthMask,\r\n  celMask,\r\n  phoneStyle,\r\n  dataStyle,\r\n  cpfStyle,\r\n  pswCompareStyle,\r\n  inputViewRed,\r\n  mailStyle,\r\n} from '../../../shared/utils/masks';\r\n\r\nvar timer;\r\n\r\nexport default function Register() {\r\n  const navigation = useNavigation();\r\n  const dispatch = useDispatch();\r\n\r\n  const {token} = useSelector((state) => ({...state.login}));\r\n\r\n  const [register, setRegister] = useState(0);\r\n  const [name, setName] = useState('');\r\n  const [cpf, setCPF] = useState('');\r\n  const [birth, setBirth] = useState('');\r\n  const [company, setCompany] = useState('');\r\n  const [coupon, setCoupon] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [password2, setPassword2] = useState('');\r\n  const [terms, setTerms] = useState(false);\r\n\r\n  const [displayed, setDisplayed] = useState(false);\r\n  const [snackText, setSnackText] = useState('Não foi possível fazer login');\r\n  const [colorChange, setColorChange] = useState(false);\r\n\r\n  var grey = '#7c7b7b';\r\n  var red = '#ce4257';\r\n\r\n  const closeModal = () => {\r\n    setDisplayed(false);\r\n    clearTimeout(timer);\r\n  };\r\n\r\n  const Display = () => {\r\n    setColorChange(true);\r\n    setDisplayed(true);\r\n    timer = setTimeout(() => setDisplayed(false), 3000);\r\n  };\r\n\r\n  function checkFields(x) {\r\n    if (x == 1) {\r\n      if (name !== '' && cpf !== '' && birth !== '') {\r\n        if (cpf.length == 14 && birth.length == 10) {\r\n          setRegister(1);\r\n          setColorChange(false);\r\n        } else {\r\n          setSnackText('Preencha os campos corretamente');\r\n          Display();\r\n        }\r\n      } else {\r\n        setSnackText('Preencha todos os campos');\r\n        Display();\r\n      }\r\n    }\r\n    if (x == 2) {\r\n      if (\r\n        password == password2 &&\r\n        terms !== false &&\r\n        phone.length == 15 &&\r\n        email.search('@') !== -1 &&\r\n        password.length >= 6 &&\r\n        password2.length >= 6\r\n      ) {\r\n\r\n        dispatch({\r\n          type: 'USER_TUTORIAL_LOGIN',\r\n          payload: { \r\n            cpf:cpf, \r\n            password:password\r\n          }\r\n        });\r\n        \r\n          postRegister(name, cpf, birth, email, phone, password, terms);\r\n        if (coupon !== '') {\r\n          getIndicationAccount(coupon, token);\r\n        }\r\n\r\n        navigation.navigate('Tutorial');\r\n      } else {\r\n        setSnackText('Verifique todos os campos');\r\n        Display();\r\n      }\r\n      if (terms == false) {\r\n        setSnackText('Concorde com os termos');\r\n        Display();\r\n      }\r\n      if (password !== password2) {\r\n        setSnackText('As senhas precisam ser iguais');\r\n        Display();\r\n      }\r\n      if(password.length < 6 || password2.length < 6){\r\n        setSnackText('As senhas de pelo menos 6 caracteres');\r\n        Display();\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {register == 0 && (\r\n        <>\r\n          <SnackBar\r\n            showSnack={displayed}\r\n            toggle={closeModal}\r\n            text={snackText}\r\n          />\r\n          <HeaderGradient\r\n            colors={['#041b4e', '#093575', '#0e4b97']}\r\n            useAngle={true}\r\n            angle={100}\r\n            angleCenter={{x: 0.5, y: 0.5}}>\r\n            <Header>\r\n              <TouchableOpacity onPress={() => navigation.pop()}>\r\n                <Icon name=\"chevron-thin-left\" size={30} color=\"white\" />\r\n              </TouchableOpacity>\r\n              <View>\r\n                <HeaderText>Vamos começar</HeaderText>\r\n                <HeaderDescription>\r\n                  Informe seu dados pessoais\r\n                </HeaderDescription>\r\n              </View>\r\n            </Header>\r\n          </HeaderGradient>\r\n\r\n          <Body>\r\n            <View>\r\n              <TextInputStyle\r\n                style={inputViewRed(name, colorChange)}\r\n                value={name}\r\n                placeholder=\"Seu nome\"\r\n                onChangeText={setName}\r\n                placeholderTextColor={colorChange && name == '' ? red : grey}\r\n              />\r\n              <TextInputStyle\r\n                style={[\r\n                  inputViewRed(cpf, colorChange),\r\n                  {\r\n                    borderBottomColor: cpfStyle(cpf, colorChange)\r\n                      ? red\r\n                      : 'black',\r\n                  },\r\n                ]}\r\n                value={cpf}\r\n                maxLength={14}\r\n                keyboardType={'numeric'}\r\n                onChangeText={(cpf) => setCPF(cpfMask(cpf))}\r\n                placeholder=\"CPF\"\r\n                placeholderTextColor={colorChange && cpf == '' ? red : grey}\r\n              />\r\n              <TextInputStyle\r\n                style={[\r\n                  inputViewRed(birth, colorChange),\r\n                  {\r\n                    borderBottomColor: dataStyle(birth, colorChange)\r\n                      ? red\r\n                      : 'black',\r\n                  },\r\n                ]}\r\n                value={birth}\r\n                placeholder=\"Data de nascimento\"\r\n                maxLength={10}\r\n                keyboardType={'numeric'}\r\n                onChangeText={(birth) =>\r\n                  setBirth(birthMask(birth, colorChange))\r\n                }\r\n                placeholderTextColor={colorChange && birth == '' ? red : grey}\r\n              />\r\n              <TextInputStyle\r\n                value={company}\r\n                placeholder=\"Qual sua empresa? (opcional)\"\r\n                onChangeText={setCompany}\r\n                placeholderTextColor=\"#7c7b7b\"\r\n              />\r\n              <TextInputStyle\r\n                value={coupon}\r\n                placeholder=\"Código de indicação (opcional)\"\r\n                onChangeText={setCoupon}\r\n                placeholderTextColor=\"#7c7b7b\"\r\n              />\r\n            </View>\r\n\r\n            <ButtonGradient\r\n              colors={['#041b4e', '#093575', '#0e4b97']}\r\n              useAngle={true}\r\n              angle={100}\r\n              angleCenter={{x: 0.5, y: 0.5}}>\r\n              <ConfirmButton\r\n                onPress={() => {\r\n                  checkFields(1);\r\n                }}>\r\n                <ButtonText>Próximo passo</ButtonText>\r\n              </ConfirmButton>\r\n            </ButtonGradient>\r\n          </Body>\r\n        </>\r\n      )}\r\n      {register == 1 && (\r\n        <>\r\n          <SnackBar\r\n            showSnack={displayed}\r\n            toggle={closeModal}\r\n            text={snackText}\r\n          />\r\n          <HeaderGradient\r\n            colors={['#041b4e', '#093575', '#0e4b97']}\r\n            useAngle={true}\r\n            angle={100}\r\n            angleCenter={{x: 0.5, y: 0.5}}>\r\n            <Header>\r\n              <TouchableOpacity onPress={() => setRegister(0)}>\r\n                <Icon name=\"chevron-thin-left\" size={30} color=\"white\" />\r\n              </TouchableOpacity>\r\n              <View>\r\n                <HeaderText>Sua conta</HeaderText>\r\n                <HeaderDescription>Crie seus dados de acesso</HeaderDescription>\r\n              </View>\r\n            </Header>\r\n          </HeaderGradient>\r\n\r\n          <Body>\r\n            <ScrollView\r\n              horizontal={false}\r\n              contentContainerStyle={{\r\n                justifyContent: 'space-evenly',\r\n                flex: 1,\r\n              }}>\r\n              <View>\r\n                <TextInputStyle\r\n                  style={[\r\n                    inputViewRed(email, colorChange),\r\n                    mailStyle(email, colorChange),\r\n                  ]}\r\n                  value={email}\r\n                  placeholder=\"E-mail\"\r\n                  onChangeText={setEmail}\r\n                  keyboardType={'email-address'}\r\n                  placeholderTextColor={colorChange && email == '' ? red : grey}\r\n                />\r\n                <TextInputStyle\r\n                  style={[\r\n                    inputViewRed(phone, colorChange),\r\n                    phoneStyle(phone, colorChange),\r\n                  ]}\r\n                  value={phone}\r\n                  placeholder=\"Celular\"\r\n                  maxLength={15}\r\n                  onChangeText={(phone) => setPhone(celMask(phone))}\r\n                  keyboardType={'numeric'}\r\n                  placeholderTextColor={colorChange && phone == '' ? red : grey}\r\n                />\r\n                <TextInputStyle\r\n                  style={pswCompareStyle(password, password2, colorChange)}\r\n                  value={password}\r\n                  onChangeText={setPassword}\r\n                  placeholder=\"Senha\"\r\n                  placeholderTextColor={\r\n                    colorChange && password == '' ? red : grey\r\n                  }\r\n                />\r\n                <TextInputStyle\r\n                  style={[\r\n                    inputViewRed(password2, colorChange),\r\n                    pswCompareStyle(password2, password, colorChange),\r\n                  ]}\r\n                  value={password2}\r\n                  onChangeText={setPassword2}\r\n                  placeholder=\"Confirmar Senha\"\r\n                  placeholderTextColor={\r\n                    (colorChange && password2 == '') ||\r\n                    (colorChange && password !== password2)\r\n                      ? red\r\n                      : grey\r\n                  }\r\n                />\r\n              </View>\r\n              <TermsView>\r\n                <TouchableOpacity onPress={() => setTerms(!terms)}>\r\n                  {terms ? (\r\n                    <CheckBox name=\"check-box\" size={30} color=\"#00a8ff\" />\r\n                  ) : (\r\n                    <CheckBox\r\n                      name=\"check-box-outline-blank\"\r\n                      size={30}\r\n                      color=\"#00a8ff\"\r\n                    />\r\n                  )}\r\n                </TouchableOpacity>\r\n                <TextStyle>\r\n                  Li e concordo com os{' '}\r\n                  <TextStyle\r\n                    policy\r\n                    onPress={() => {\r\n                      navigation.navigate('Termos');\r\n                    }}>\r\n                    termos de uso e políticas de privacidade\r\n                  </TextStyle>\r\n                </TextStyle>\r\n              </TermsView>\r\n            </ScrollView>\r\n\r\n            <ButtonGradient\r\n              colors={['#041b4e', '#093575', '#0e4b97']}\r\n              useAngle={true}\r\n              angle={100}\r\n              angleCenter={{x: 0.5, y: 0.5}}>\r\n              <ConfirmButton\r\n                onPress={() => {\r\n                  checkFields(2);\r\n                }}>\r\n                <ButtonText>Concluir cadastro</ButtonText>\r\n              </ConfirmButton>\r\n            </ButtonGradient>\r\n          </Body>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}