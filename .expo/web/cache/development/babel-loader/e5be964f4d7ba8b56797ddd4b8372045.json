{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.putAccount = exports.getLogin = exports.postLogin = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _api = _interopRequireDefault(require(\"./api\"));\n\nvar postLogin = function postLogin(cpf, password, dispatch) {\n  return _regenerator.default.async(function postLogin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(cpf !== '' && password !== '')) {\n            _context.next = 15;\n            break;\n          }\n\n          dispatch({\n            type: 'USER_LOGIN_LOADING'\n          });\n          _context.prev = 2;\n          _context.next = 5;\n          return _regenerator.default.awrap(_api.default.post('/v1/seguros-mds/login', {\n            cpf: cpf,\n            password: password\n          }).then(function (res) {\n            console.log(res.data);\n            dispatch({\n              type: 'USER_TOKEN',\n              payload: res.data.token\n            });\n            dispatch({\n              type: 'USER_ID',\n              payload: res.data.account.accountId\n            });\n            getLogin(res.data.account.accountId, res.data.token, dispatch);\n          }));\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](2);\n          dispatch({\n            type: 'USER_LOGIN_FAIL'\n          });\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", 'Não foi possível fazer Login');\n\n        case 12:\n          return _context.abrupt(\"return\", 1);\n\n        case 15:\n          return _context.abrupt(\"return\", 'Preencha todos os campos');\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 7]], Promise);\n};\n\nexports.postLogin = postLogin;\n\nvar getLogin = function getLogin(ID, token, dispatch) {\n  return _regenerator.default.async(function getLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regenerator.default.awrap(_api.default.get(\"https://api.mdsinsure.com/v1/seguros-mds/account?accountId=\" + ID, {\n            headers: {\n              Authorization: \"BEARER \" + token\n            }\n          }).then(function (res) {\n            console.log(res.data);\n            dispatch({\n              type: 'USER_INFO',\n              payload: res.data\n            });\n            dispatch({\n              type: 'USER_LOGIN_SUCCESS'\n            });\n          }));\n\n        case 3:\n          _context2.next = 8;\n          break;\n\n        case 5:\n          _context2.prev = 5;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nexports.getLogin = getLogin;\n\nvar putAccount = function putAccount(accountId, token, addresses, name, cpf, birth, email, phone, terms) {\n  var year, month, day, birthday;\n  return _regenerator.default.async(function putAccount$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          year = birth.substring(6, 10);\n          month = birth.substring(3, 5) - 1;\n          day = birth.substring(0, 2);\n          birthday = new Date(year, month, day).toISOString();\n          console.log({\n            accountId: accountId,\n            name: name,\n            cpf: cpf,\n            birthday: birthday,\n            email: email,\n            phone: phone,\n            terms: terms,\n            addresses: addresses\n          });\n          _context3.prev = 5;\n          _context3.next = 8;\n          return _regenerator.default.awrap(_api.default.put(\"https://api.mdsinsure.com/v1/seguros-mds/account\", {\n            accountId: accountId,\n            name: name,\n            cpf: cpf,\n            birthday: birthday,\n            email: email,\n            phone: phone,\n            terms: terms,\n            addresses: addresses\n          }, {\n            headers: {\n              Authorization: \"BEARER \" + token\n            }\n          }).then(function (res) {\n            console.log(res.status);\n          }));\n\n        case 8:\n          _context3.next = 13;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](5);\n          console.log(_context3.t0);\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[5, 10]], Promise);\n};\n\nexports.putAccount = putAccount;","map":{"version":3,"sources":["C:/Users/mich0/Downloads/Mds.App.V2-master/Mds.App.V2-master/src/services/login.js"],"names":["postLogin","cpf","password","dispatch","type","api","post","then","res","console","log","data","payload","token","account","accountId","getLogin","ID","get","headers","Authorization","putAccount","addresses","name","birth","email","phone","terms","year","substring","month","day","birthday","Date","toISOString","put","status"],"mappings":"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","sourcesContent":["import api from './api';\r\n\r\nexport const postLogin = async (cpf, password, dispatch) => {\r\n  if (cpf !== '' && password !== '') {\r\n    dispatch({\r\n      type: 'USER_LOGIN_LOADING',\r\n    });\r\n    try {\r\n      await api.post('/v1/seguros-mds/login', {cpf, password}).then((res) => {\r\n        console.log(res.data);\r\n        dispatch({\r\n          type: 'USER_TOKEN',\r\n          payload: res.data.token,\r\n        });\r\n        dispatch({\r\n          type: 'USER_ID',\r\n          payload: res.data.account.accountId,\r\n        });\r\n\r\n        getLogin(res.data.account.accountId, res.data.token, dispatch);\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'USER_LOGIN_FAIL',\r\n      });\r\n      console.log(error);\r\n      return 'Não foi possível fazer Login';\r\n    }\r\n    return 1;\r\n  } else {\r\n    return 'Preencha todos os campos';\r\n  }\r\n};\r\n\r\nexport const getLogin = async (ID, token, dispatch) => {\r\n  try {\r\n    await api\r\n      .get(`https://api.mdsinsure.com/v1/seguros-mds/account?accountId=${ID}`, {\r\n        headers: {\r\n          Authorization: `BEARER ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        dispatch({\r\n          type: 'USER_INFO',\r\n          payload: res.data,\r\n        });\r\n        dispatch({\r\n          type: 'USER_LOGIN_SUCCESS',\r\n        });\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const putAccount = async (\r\n  accountId,\r\n  token,\r\n  addresses,\r\n  name,\r\n  cpf,\r\n  birth,\r\n  email,\r\n  phone,\r\n  terms,\r\n) => {\r\n  let year = birth.substring(6, 10);\r\n  let month = birth.substring(3, 5) - 1;\r\n  let day = birth.substring(0, 2);\r\n\r\n  let birthday = new Date(year, month, day).toISOString();\r\n\r\n  console.log({accountId, name, cpf, birthday, email, phone, terms, addresses});\r\n  try {\r\n    await api\r\n      .put(\r\n        `https://api.mdsinsure.com/v1/seguros-mds/account`,\r\n        {accountId, name, cpf, birthday, email, phone, terms, addresses},\r\n        {\r\n          headers: {\r\n            Authorization: `BEARER ${token}`,\r\n          },\r\n        },\r\n      )\r\n      .then((res) => {\r\n        console.log(res.status);\r\n      });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}