{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postOffer = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _api = _interopRequireDefault(require(\"./api\"));\n\nvar postOffer = function postOffer(accountId, productId, date, token) {\n  return _regenerator.default.async(function postOffer$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regenerator.default.awrap(_api.default.post(\"/v1/seguros-mds/notifydue\", {\n            accountId: accountId,\n            productId: productId,\n            date: date,\n            active: true\n          }, {\n            headers: {\n              Authorization: \"BEARER \" + token\n            }\n          }).then(function (res) {\n            console.log(res.data);\n          }));\n\n        case 3:\n          _context.next = 9;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", 'Não foi possível agendar, tente novamente');\n\n        case 9:\n          return _context.abrupt(\"return\", 'Agendamento Concluído');\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nexports.postOffer = postOffer;","map":{"version":3,"sources":["C:/Users/mich0/Downloads/Mds.App.V2-master/Mds.App.V2-master/src/services/oferta.js"],"names":["postOffer","accountId","productId","date","token","api","post","active","headers","Authorization","then","res","console","log","data"],"mappings":";;;;;;;;;AAAA;;AAEO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAOC,SAAP,EAAkBC,SAAlB,EAA6BC,IAA7B,EAAmCC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEfC,aACHC,IADG,8BAGF;AACEL,YAAAA,SAAS,EAAEA,SADb;AAEEC,YAAAA,SAAS,EAAEA,SAFb;AAGEC,YAAAA,IAAI,EAAEA,IAHR;AAIEI,YAAAA,MAAM,EAAE;AAJV,WAHE,EASF;AACEC,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,cAAYL;AADlB;AADX,WATE,EAeHM,IAfG,CAeE,UAACC,GAAD,EAAS;AACbC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACD,WAjBG,CAFe;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqBrBF,UAAAA,OAAO,CAACC,GAAR;AArBqB,2CAsBd,2CAtBc;;AAAA;AAAA,2CAwBhB,uBAxBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["import api from './api';\r\n\r\nexport const postOffer = async (accountId, productId, date, token) => {\r\n  try {\r\n    await api\r\n      .post(\r\n        `/v1/seguros-mds/notifydue`,\r\n        {\r\n          accountId: accountId,\r\n          productId: productId,\r\n          date: date,\r\n          active: true,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `BEARER ${token}`,\r\n          },\r\n        },\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      });\r\n  } catch (e) {\r\n    console.log(e);\r\n    return 'Não foi possível agendar, tente novamente';\r\n  }\r\n  return 'Agendamento Concluído';\r\n};\r\n"]},"metadata":{},"sourceType":"script"}