{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postRegister = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _api = _interopRequireDefault(require(\"./api\"));\n\nvar postRegister = function postRegister(name, cpf, birth, email, phone, password, terms) {\n  var year, month, day, birthday, response;\n  return _regenerator.default.async(function postRegister$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          year = birth.substring(6, 10);\n          month = birth.substring(3, 5) - 1;\n          day = birth.substring(0, 2);\n          birthday = new Date(year, month, day).toISOString();\n          console.log({\n            name: name,\n            cpf: cpf,\n            birthday: birthday,\n            email: email,\n            phone: phone,\n            password: password,\n            terms: terms\n          });\n          _context.prev = 5;\n          _context.next = 8;\n          return _regenerator.default.awrap(_api.default.post('/v1/seguros-mds/account', {\n            name: name,\n            cpf: cpf,\n            birthday: birthday,\n            email: email,\n            phone: phone,\n            password: password,\n            terms: terms\n          }));\n\n        case 8:\n          response = _context.sent;\n          console.log(response);\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](5);\n          console.log(_context.t0);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[5, 12]], Promise);\n};\n\nexports.postRegister = postRegister;","map":{"version":3,"sources":["C:/Users/mich0/Downloads/Mds.App.V2-master/Mds.App.V2-master/src/services/register.js"],"names":["postRegister","name","cpf","birth","email","phone","password","terms","year","substring","month","day","birthday","Date","toISOString","console","log","api","post","response"],"mappings":";;;;;;;;;AAAA;;AAEO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAC1BC,IAD0B,EAE1BC,GAF0B,EAG1BC,KAH0B,EAI1BC,KAJ0B,EAK1BC,KAL0B,EAM1BC,QAN0B,EAO1BC,KAP0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAStBC,UAAAA,IATsB,GASfL,KAAK,CAACM,SAAN,CAAgB,CAAhB,EAAmB,EAAnB,CATe;AAUtBC,UAAAA,KAVsB,GAUdP,KAAK,CAACM,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,IAAwB,CAVV;AAWtBE,UAAAA,GAXsB,GAWhBR,KAAK,CAACM,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAXgB;AAatBG,UAAAA,QAbsB,GAaX,IAAIC,IAAJ,CAASL,IAAT,EAAeE,KAAf,EAAsBC,GAAtB,EAA2BG,WAA3B,EAbW;AAe1BC,UAAAA,OAAO,CAACC,GAAR,CAAY;AACVf,YAAAA,IAAI,EAAJA,IADU;AAEVC,YAAAA,GAAG,EAAHA,GAFU;AAGVU,YAAAA,QAAQ,EAARA,QAHU;AAIVR,YAAAA,KAAK,EAALA,KAJU;AAKVC,YAAAA,KAAK,EAALA,KALU;AAMVC,YAAAA,QAAQ,EAARA,QANU;AAOVC,YAAAA,KAAK,EAALA;AAPU,WAAZ;AAf0B;AAAA;AAAA,4CA0BDU,aAAIC,IAAJ,CAAS,yBAAT,EAAoC;AACzDjB,YAAAA,IAAI,EAAJA,IADyD;AAEzDC,YAAAA,GAAG,EAAHA,GAFyD;AAGzDU,YAAAA,QAAQ,EAARA,QAHyD;AAIzDR,YAAAA,KAAK,EAALA,KAJyD;AAKzDC,YAAAA,KAAK,EAALA,KALyD;AAMzDC,YAAAA,QAAQ,EAARA,QANyD;AAOzDC,YAAAA,KAAK,EAALA;AAPyD,WAApC,CA1BC;;AAAA;AA0BlBY,UAAAA,QA1BkB;AAmCxBJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAnCwB;AAAA;;AAAA;AAAA;AAAA;AAqCxBJ,UAAAA,OAAO,CAACC,GAAR;;AArCwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import api from './api';\r\n\r\nexport const postRegister = async (\r\n  name,\r\n  cpf,\r\n  birth,\r\n  email,\r\n  phone,\r\n  password,\r\n  terms,\r\n) => {\r\n  let year = birth.substring(6, 10);\r\n  let month = birth.substring(3, 5) - 1;\r\n  let day = birth.substring(0, 2);\r\n\r\n  let birthday = new Date(year, month, day).toISOString();\r\n\r\n  console.log({\r\n    name,\r\n    cpf,\r\n    birthday,\r\n    email,\r\n    phone,\r\n    password,\r\n    terms,\r\n  });\r\n\r\n  try {\r\n    const response = await api.post('/v1/seguros-mds/account', {\r\n      name,\r\n      cpf,\r\n      birthday,\r\n      email,\r\n      phone,\r\n      password,\r\n      terms,\r\n    });\r\n    console.log(response);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}