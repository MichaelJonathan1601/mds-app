{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = DateSelector;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeDatePicker = _interopRequireDefault(require(\"react-native-date-picker\"));\n\nvar _styles = require(\"./styles\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\mich0\\\\Downloads\\\\Mds.App.V2-master\\\\Mds.App.V2-master\\\\src\\\\shared\\\\components\\\\DatePicker\\\\index.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction DateSelector(_ref) {\n  var date = _ref.date,\n      setVar = _ref.setVar,\n      pickerDisplayed = _ref.pickerDisplayed,\n      setPickerDisplay = _ref.setPickerDisplay,\n      setDisplayDate = _ref.setDisplayDate,\n      type = _ref.type;\n\n  var FormatDate = function FormatDate(d) {\n    if (type == 'date') {\n      setDisplayDate(d.getDate() + '/' + (d.getMonth() + 1) + '/' + d.getFullYear());\n    } else {\n      setDisplayDate(d.getDate() + '/' + (d.getMonth() + 1) + '/' + d.getFullYear() + '\\t\\t\\t\\t\\t' + d.getHours() + ':' + d.getMinutes());\n    }\n  };\n\n  return _react.default.createElement(_reactNative.Modal, {\n    visible: pickerDisplayed,\n    animationType: 'fade',\n    transparent: true,\n    statusBarTranslucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      width: '100%',\n      backgroundColor: 'rgba(0,0,0,0.5)',\n      height: '100%',\n      activeOpacity: 1,\n      justifyContent: 'flex-end',\n      paddingBottom: '10%',\n      alignItems: 'center',\n      zIndex: -1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      width: '80%',\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeDatePicker.default, {\n    style: {\n      backgroundColor: 'white',\n      width: _reactNative.Dimensions.get('screen').width - _reactNative.Dimensions.get('screen').width * 20 / 100\n    },\n    mode: type,\n    date: date,\n    onDateChange: setVar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      setPickerDisplay(false);\n    },\n    style: {\n      backgroundColor: 'white',\n      width: '50%',\n      padding: 15,\n      alignItems: 'center',\n      borderTopColor: 'lightgrey',\n      borderTopWidth: 0.5,\n      borderRightColor: 'lightgrey',\n      borderRightWidth: 0.25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_styles.TextStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Cancelar\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      setPickerDisplay(false);\n      FormatDate(date);\n    },\n    style: {\n      alignItems: 'center',\n      backgroundColor: 'white',\n      width: '50%',\n      padding: 15,\n      borderTopColor: 'lightgrey',\n      borderTopWidth: 0.5,\n      borderLeftColor: 'lightgrey',\n      borderLeftWidth: 0.25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_styles.TextStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"OK\"))))));\n}","map":{"version":3,"sources":["C:/Users/mich0/Downloads/Mds.App.V2-master/Mds.App.V2-master/src/shared/components/DatePicker/index.js"],"names":["DateSelector","date","setVar","pickerDisplayed","setPickerDisplay","setDisplayDate","type","FormatDate","d","getDate","getMonth","getFullYear","getHours","getMinutes","width","backgroundColor","height","activeOpacity","justifyContent","paddingBottom","alignItems","zIndex","Dimensions","get","display","flexDirection","padding","borderTopColor","borderTopWidth","borderRightColor","borderRightWidth","borderLeftColor","borderLeftWidth"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport {Dimensions, Modal, View, TouchableOpacity} from 'react-native';\r\n\r\nimport DatePicker from 'react-native-date-picker';\r\n\r\nimport {TextStyle} from './styles';\r\n\r\nexport default function DateSelector({\r\n  date,\r\n  setVar,\r\n  pickerDisplayed,\r\n  setPickerDisplay,\r\n  setDisplayDate,\r\n  type,\r\n}) {\r\n  const FormatDate = (d) => {\r\n    if (type == 'date') {\r\n      setDisplayDate(\r\n        d.getDate() + '/' + (d.getMonth() + 1) + '/' + d.getFullYear(),\r\n      );\r\n    } else {\r\n      setDisplayDate(\r\n        d.getDate() +\r\n          '/' +\r\n          (d.getMonth() + 1) +\r\n          '/' +\r\n          d.getFullYear() +\r\n          '\\t\\t\\t\\t\\t' +\r\n          d.getHours() +\r\n          ':' +\r\n          d.getMinutes(),\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={pickerDisplayed}\r\n      animationType={'fade'}\r\n      transparent={true}\r\n      statusBarTranslucent={true}>\r\n      <View\r\n        style={{\r\n          width: '100%',\r\n          backgroundColor: 'rgba(0,0,0,0.5)',\r\n          height: '100%',\r\n          activeOpacity: 1,\r\n          justifyContent: 'flex-end',\r\n          paddingBottom: '10%',\r\n          alignItems: 'center',\r\n          zIndex: -1,\r\n        }}>\r\n        <View style={{width: '80%', backgroundColor: 'white'}}>\r\n          <DatePicker\r\n            style={{\r\n              backgroundColor: 'white',\r\n              width:\r\n                Dimensions.get('screen').width -\r\n                (Dimensions.get('screen').width * 20) / 100,\r\n            }}\r\n            mode={type}\r\n            date={date}\r\n            onDateChange={setVar}\r\n          />\r\n          <View style={{display: 'flex', flexDirection: 'row'}}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setPickerDisplay(false);\r\n              }}\r\n              style={{\r\n                backgroundColor: 'white',\r\n                width: '50%',\r\n                padding: 15,\r\n                alignItems: 'center',\r\n                borderTopColor: 'lightgrey',\r\n                borderTopWidth: 0.5,\r\n                borderRightColor: 'lightgrey',\r\n                borderRightWidth: 0.25,\r\n              }}>\r\n              <TextStyle>Cancelar</TextStyle>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setPickerDisplay(false);\r\n                FormatDate(date);\r\n              }}\r\n              style={{\r\n                alignItems: 'center',\r\n                backgroundColor: 'white',\r\n                width: '50%',\r\n                padding: 15,\r\n                borderTopColor: 'lightgrey',\r\n                borderTopWidth: 0.5,\r\n                borderLeftColor: 'lightgrey',\r\n                borderLeftWidth: 0.25,\r\n              }}>\r\n              <TextStyle>OK</TextStyle>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}