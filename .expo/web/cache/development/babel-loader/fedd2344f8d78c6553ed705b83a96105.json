{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Login;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _styles = require(\"./styles\");\n\nvar _SimpleLineIcons = _interopRequireDefault(require(\"react-native-vector-icons/dist/SimpleLineIcons\"));\n\nvar _Ionicons = _interopRequireDefault(require(\"react-native-vector-icons/dist/Ionicons\"));\n\nvar _SnackBar = _interopRequireDefault(require(\"../../../shared/components/SnackBar\"));\n\nvar _login = require(\"../../../services/login\");\n\nvar _masks = require(\"../../../shared/utils/masks\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\mich0\\\\Downloads\\\\Mds.App.V2-master\\\\Mds.App.V2-master\\\\src\\\\screens\\\\LoginScreens\\\\Login\\\\index.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar timer;\n\nfunction Login() {\n  var navigation = (0, _native.useNavigation)();\n\n  var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      focus = _useState2[0],\n      setFocus = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      cpf = _useState4[0],\n      setCPF = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(''),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(false),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      pswShow = _useState8[0],\n      setPswShow = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      colorChange = _useState10[0],\n      setColorChange = _useState10[1];\n\n  var _useState11 = (0, _react.useState)('Não foi possível fazer login'),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      snackText = _useState12[0],\n      setSnackText = _useState12[1];\n\n  var _useState13 = (0, _react.useState)(false),\n      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n      displayed = _useState14[0],\n      setDisplayed = _useState14[1];\n\n  var grey = '#7c7b7b';\n  var red = '#ef271b';\n\n  var closeModal = function closeModal() {\n    setDisplayed(false);\n    clearTimeout(timer);\n  };\n\n  var Display = function Display() {\n    setColorChange(true);\n    setDisplayed(true);\n    timer = setTimeout(function () {\n      return setDisplayed(false);\n    }, 3000);\n  };\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n    return (0, _extends2.default)({}, state.login);\n  }),\n      isLoading = _useSelector.isLoading;\n\n  var dispatch = (0, _reactRedux.useDispatch)();\n  (0, _react.useEffect)(function () {\n    LoadAsync();\n  }, []);\n\n  function LoadAsync() {\n    var x;\n    return _regenerator.default.async(function LoadAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('TOKEN'));\n\n          case 3:\n            x = _context.sent;\n\n            if (x != null) {\n              console.log(x);\n              dispatch({\n                type: 'USER_TOKEN',\n                payload: x\n              });\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  function inputViewFocus(x) {\n    if (focus == x) {\n      return {\n        elevation: 5,\n        shadowColor: '#000',\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84\n      };\n    }\n  }\n\n  function inputViewRed2(data) {\n    if (colorChange && data == '') {\n      return {\n        borderBottomColor: red\n      };\n    } else {\n      return {\n        borderBottomColor: 'black'\n      };\n    }\n  }\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.StatusBar, {\n    barStyle: \"light-content\",\n    translucent: true,\n    backgroundColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_styles.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_styles.ImageHeader, {\n    source: require('../../../assets/img/header.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_styles.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, !isLoading && _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_styles.InputView, {\n    style: [inputViewFocus(1), inputViewRed2(cpf)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_Ionicons.default, {\n    name: \"person-outline\",\n    size: 30,\n    color: colorChange && cpf == '' ? red : 'black',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(_styles.TextInputStyle, {\n    value: cpf,\n    maxLength: 14,\n    keyboardType: 'numeric',\n    onChangeText: function onChangeText(cpf) {\n      return setCPF((0, _masks.cpfMask)(cpf));\n    },\n    onFocus: function onFocus() {\n      return setFocus(1);\n    },\n    placeholder: \"CPF\",\n    placeholderTextColor: colorChange && cpf == '' ? red : grey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  })), _react.default.createElement(_styles.InputView, {\n    style: [inputViewFocus(2), inputViewRed2(password)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_SimpleLineIcons.default, {\n    name: \"lock\",\n    size: 30,\n    color: colorChange && password == '' ? red : '#0b3a7e',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(_styles.TextInputStyle, {\n    onChangeText: setPassword,\n    onFocus: function onFocus() {\n      return setFocus(2);\n    },\n    secureTextEntry: pswShow,\n    placeholder: 'Senha',\n    placeholderTextColor: colorChange ? red : grey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(_Ionicons.default, {\n    name: pswShow ? \"eye-outline\" : \"eye-off-outline\",\n    onPress: function onPress() {\n      return setPswShow(!pswShow);\n    },\n    size: 30,\n    color: colorChange && password == '' ? red : '#0b3a7e',\n    style: {\n      position: 'absolute',\n      right: 10,\n      top: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }))), isLoading && _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.ActivityIndicator, {\n    size: \"large\",\n    color: \"#0e4b97\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_styles.ButtonGradient, {\n    colors: ['#041b4e', '#093575', '#0e4b97'],\n    useAngle: true,\n    angle: 100,\n    angleCenter: {\n      x: 0.5,\n      y: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_styles.ConfirmButton, {\n    onPress: function onPress() {\n      (0, _login.postLogin)(cpf, password, dispatch).then(function (data) {\n        setSnackText(data);\n        data !== 1 ? Display() : {};\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_styles.ButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"Entrar\"))), _react.default.createElement(_styles.TextCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_styles.LinkText, {\n    onPress: function onPress() {\n      return navigation.navigate('pswChange');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"Esqueci minha senha\"))), _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_styles.TextCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_styles.GreyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \"N\\xE3o tem cadastro?\")), _react.default.createElement(_styles.ConfirmButton, {\n    button2: true,\n    onPress: function onPress() {\n      return navigation.navigate('Register');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_styles.ButtonText, {\n    black: true,\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, \"Criar minha conta\")), _react.default.createElement(_SnackBar.default, {\n    showSnack: displayed,\n    toggle: closeModal,\n    text: snackText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/mich0/Downloads/Mds.App.V2-master/Mds.App.V2-master/src/screens/LoginScreens/Login/index.js"],"names":["timer","Login","navigation","focus","setFocus","cpf","setCPF","password","setPassword","pswShow","setPswShow","colorChange","setColorChange","snackText","setSnackText","displayed","setDisplayed","grey","red","closeModal","clearTimeout","Display","setTimeout","state","login","isLoading","dispatch","LoadAsync","AsyncStorage","getItem","x","console","log","type","payload","alert","inputViewFocus","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","inputViewRed2","data","borderBottomColor","require","position","right","top","y","then","navigate"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {View, StatusBar, ActivityIndicator} from 'react-native';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {useNavigation} from '@react-navigation/native';\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport {\r\n  Body,\r\n  ConfirmButton,\r\n  ButtonText,\r\n  Header,\r\n  TextCenter,\r\n  ButtonGradient,\r\n  InputView,\r\n  TextInputStyle,\r\n  GreyText,\r\n  LinkText,\r\n  ImageHeader,\r\n} from './styles';\r\n\r\nimport Lock from 'react-native-vector-icons/dist/SimpleLineIcons';\r\nimport UserIcon from 'react-native-vector-icons/dist/Ionicons';\r\n\r\nimport SnackBar from '../../../shared/components/SnackBar';\r\n\r\nimport {postLogin} from '../../../services/login';\r\n\r\nimport {cpfMask} from '../../../shared/utils/masks';\r\n\r\nvar timer;\r\n\r\nexport default function Login() {\r\n  const navigation = useNavigation();\r\n  const [focus, setFocus] = useState(0);\r\n  const [cpf, setCPF] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  \r\n  const [pswShow, setPswShow] = useState(false);\r\n\r\n  const [colorChange, setColorChange] = useState(false);\r\n  const [snackText, setSnackText] = useState('Não foi possível fazer login');\r\n  const [displayed, setDisplayed] = useState(false);\r\n  var grey = '#7c7b7b';\r\n  var red = '#ef271b';\r\n\r\n  const closeModal = () => {\r\n    setDisplayed(false);\r\n    clearTimeout(timer);\r\n  };\r\n\r\n  const Display = () => {\r\n    setColorChange(true);\r\n    setDisplayed(true);\r\n    timer = setTimeout(() => setDisplayed(false), 3000);\r\n  };\r\n\r\n  const {isLoading} = useSelector((state) => ({...state.login}));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    LoadAsync();\r\n  }, []);\r\n\r\n  async function LoadAsync() {\r\n    try {\r\n      let x = await AsyncStorage.getItem('TOKEN');\r\n      if (x != null) {\r\n        console.log(x);\r\n        dispatch({\r\n          type: 'USER_TOKEN',\r\n          payload: x,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  function inputViewFocus(x) {\r\n    if (focus == x) {\r\n      return {\r\n        elevation: 5,\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n      };\r\n    }\r\n  }\r\n  function inputViewRed2(data) {\r\n    if (colorChange && data == '') {\r\n      return {borderBottomColor: red};\r\n    } else {\r\n      return {borderBottomColor: 'black'};\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StatusBar\r\n        barStyle=\"light-content\"\r\n        translucent\r\n        backgroundColor=\"transparent\"\r\n      />\r\n      <Header>\r\n        <ImageHeader source={require('../../../assets/img/header.png')} />\r\n      </Header>\r\n\r\n      <Body>\r\n        {!isLoading && (\r\n          <View>\r\n            <InputView style={[inputViewFocus(1), inputViewRed2(cpf)]}>\r\n              <UserIcon\r\n                name=\"person-outline\"\r\n                size={30}\r\n                color={colorChange && cpf == '' ? red : 'black'}\r\n              />\r\n              <TextInputStyle\r\n                value={cpf}\r\n                maxLength={14}\r\n                keyboardType={'numeric'}\r\n                onChangeText={(cpf) => setCPF(cpfMask(cpf))}\r\n                onFocus={() => setFocus(1)}\r\n                placeholder=\"CPF\"\r\n                placeholderTextColor={colorChange && cpf == '' ? red : grey}\r\n              />\r\n            </InputView>\r\n            <InputView style={[inputViewFocus(2), inputViewRed2(password)]}>\r\n              <Lock\r\n                name=\"lock\"\r\n                size={30}\r\n                color={colorChange && password == '' ? red : '#0b3a7e'}\r\n              />\r\n              <TextInputStyle\r\n                onChangeText={setPassword}\r\n                onFocus={() => setFocus(2)}\r\n                secureTextEntry={pswShow}\r\n                placeholder={'Senha'}\r\n                placeholderTextColor={colorChange ? red : grey}\r\n              />\r\n              <UserIcon\r\n              name={pswShow? \"eye-outline\" : \"eye-off-outline\"}\r\n              onPress={()=>setPswShow(!pswShow)}\r\n              size={30}\r\n              color={colorChange && password == '' ? red : '#0b3a7e'}\r\n              style={{position: 'absolute',right:10,top:10}}\r\n            />\r\n            </InputView>\r\n          </View>\r\n        )}\r\n        {isLoading && (\r\n          <View>\r\n            <ActivityIndicator size=\"large\" color=\"#0e4b97\" />\r\n          </View>\r\n        )}\r\n\r\n        <View>\r\n          <ButtonGradient\r\n            colors={['#041b4e', '#093575', '#0e4b97']}\r\n            useAngle={true}\r\n            angle={100}\r\n            angleCenter={{x: 0.5, y: 0.5}}>\r\n            <ConfirmButton\r\n              onPress={() => {\r\n                postLogin(cpf, password, dispatch).then((data) => {\r\n                  setSnackText(data);\r\n                  data !== 1 ? Display() : {};\r\n                });\r\n              }}>\r\n              <ButtonText>Entrar</ButtonText>\r\n            </ConfirmButton>\r\n          </ButtonGradient>\r\n          <TextCenter>\r\n            <LinkText onPress={() => navigation.navigate('pswChange')}>\r\n              Esqueci minha senha\r\n            </LinkText>\r\n          </TextCenter>\r\n        </View>\r\n\r\n        <View>\r\n          <TextCenter>\r\n            <GreyText>Não tem cadastro?</GreyText>\r\n          </TextCenter>\r\n\r\n          <ConfirmButton\r\n            button2\r\n            onPress={() => navigation.navigate('Register')}>\r\n            <ButtonText black active>\r\n              Criar minha conta\r\n            </ButtonText>\r\n          </ConfirmButton>\r\n\r\n          <SnackBar\r\n            showSnack={displayed}\r\n            toggle={closeModal}\r\n            text={snackText}\r\n          />\r\n        </View>\r\n      </Body>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}